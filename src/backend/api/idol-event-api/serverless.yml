service: idol-event-api

frameworkVersion: "3"

useDotenv: true

provider:
  name: aws
  runtime: python3.10
  region: ap-northeast-1
  stackTags:
    Name: ${self:custom.var.myname}
    Environment: ${self:custom.var.environment}
    SystemName: ${self:custom.var.mysystemname}
    ApplicationRole: api
  apiGateway:
    apiKeys:
      - normal:
        - normalKey
    usagePlan:
      - normal:
          quota:
            limit: 1000
            period: MONTH
          throttle:
            burstLimit: 100
            rateLimit: 10

functions:
  getEvents:
    name: ${self:custom.var.myname}
    handler: handler.lambda_handler
    role: arn:aws:iam::523736472015:role/service-role/api-get-event-role-xdyhloek
    timeout: 30
    memorySize: 1024
    layers:
      - Ref: PythonRequirementsLambdaLayer
    events:
      - http:
          path: events
          method: get

  getEventById:
    name: ${self:custom.var.myname}-get-event-by-id
    handler: get-event-detail.lambda_handler
    role: arn:aws:iam::523736472015:role/service-role/api-get-event-role-xdyhloek
    timeout: 30
    memorySize: 1024
    layers:
      - Ref: PythonRequirementsLambdaLayer
    events:
      - http:
          path: events/{eventid}
          method: get

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    slim: true 
    layer: true
  var:
    myname: ${self:custom.var.mysystemname}-${self:custom.var.environment}-${self:service}-api
    environment: ${opt:stage, 'dev'}
    mysystemname: ${file(./conf/settings.yml):SystemName}

package:
  patterns:
    - "!.vscode/**"
    - "!.git/**"
    - "!.gitignore"
    - "!.serverless"
    - "!.serverless/**"
    - "!README.md"
    - "!package*.json"
    - "!requirements.txt"
    - "!node_modules/**"
    - "!__pycache__"
    - "!yarn.lock"
    - "!conf/**"
